server:
  port: ${PORT:8080}
  servlet:
    session:
      cookie:
        same-site: lax
        secure: false  # Pour le développement local
        http-only: true

logging:
  level:
    org.atmosphere: warn
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web.client.RestTemplate: DEBUG
    org.springframework.security.web.authentication: DEBUG
    org.springframework.security.oauth2.client: DEBUG
    org.springframework.security.web: DEBUG
    org.springframework.security.oauth2.client.web: DEBUG
    org.springframework.security.oauth2.client.registration: DEBUG
    org.springframework.security.oauth2.client.oidc: DEBUG
    com.elfstack.toys.security: DEBUG

vaadin:
  launch-browser: true
  allowed-packages: com.vaadin,org.vaadin,com.flowingcode,com.elfstack.toys
  url-mapping: "/*"


spring:
  mail:
    host: smtp.gmail.com
    port: 587
    username: dfasyaka@gmail.com
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
    default-encoding: UTF-8

  config:
    import: optional:file:.env[.properties]
  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASS}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      format_sql: true
  security:
    oauth2:
      client:
        registration:
          keycloak:
            client-id: task-management-app
            client-secret: kAZEIszScubcPyeiXzBYZKOBIZMBqkxz
            scope: openid,profile,email
            authorization-grant-type: authorization_code
            redirect-uri: "http://localhost:8080/login/oauth2/code/keycloak"
        provider:
          keycloak:
            issuer-uri: http://localhost:8081/realms/task-management
            user-name-attribute: preferred_username
  session:
    store-type: none  # Utilise la session en mémoire
    timeout: 30m

# Configuration Keycloak
keycloak:
  auth-server-url: http://localhost:8081
  realm: ${MY_REALM}
  resource: ${KEYCLOAK_CLIENT_ID}
  admin:
    username: ${ADMIN_USERNAME}
    password: ${ADMIN_PASSWORD}
  api:
    url: http://localhost:8080/auth/admin/realms/task-management/users

  # Configuration Admin Client pour accéder aux utilisateurs
  admin-client:
    client-id: admin-cli
    client-secret: ${ADMIN_SECRET}
# Configuration Google Calendar API
google:
  calendar:
    api:
      key: ${CLE_API}
    application:
      name: ${MY_REALM}

country:
  calendars:
    json:
      path: country-calendars.json
